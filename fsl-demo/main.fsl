collection customer {
  history_days 0
}

collection store {
  history_days 0
}

collection product {
  history_days 0

  index byName {
    terms [.name]
  }
  unique [.name]

  check notNegativeQty(.quantity >= 0)

  compute backordered = (
    x => {
      if (x.quantity < x.backorderedLimit) {
        true
      } else {
        false
      }
    }
  )
}

collection order {
  history_days 0

  index byStatus {
    terms [.status]
  }
}

role customerRole {
  membership customer

  privileges order {
    read
  }

  privileges product {
    read
  }

  privileges customer {
    read {
      predicate (self => {
        self == Query.identity()
      })
    }
  }
}
